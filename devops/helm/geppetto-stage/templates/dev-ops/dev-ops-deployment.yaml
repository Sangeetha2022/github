apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ .Values.app.prefix }}-ops
  namespace: {{ .Values.app.namespace }}
spec:
  replicas: 1
  template:
    metadata:
      labels:
	app: {{ .Values.app.prefix }}-ops
    spec:
      containers:
        - name: jenkins-container
          imagePullPolicy: {{ .Values.deployment.defaultImagePullPolicy }}
          image: tharanirajan/gep-jenkins:3.0
          env:
            - name: JAVA_OPTS
              value: -Djenkins.install.runSetupWizard=true
          ports:
            - name: http-port
              containerPort: 8080
            - name: jnlp-port
              containerPort: 50000
          volumeMounts:
#            - name: jenkins-data
#              mountPath: /var/jenkins_home
            - name: docker-socket-volume
              mountPath: /var/run/docker.sock
            - name: {{ .Values.app.prefix }}-generated-code
              mountPath: /geppetto
          securityContext:
              privileged: true
#        - name: nexus-container
#          imagePullPolicy: Always
#          image: sonatype/nexus3
#          resources:
#            limits:
#              memory: "4Gi"
#              cpu: "1000m"
#          requests:
#              memory: "2Gi"
#              cpu: "500m"
#          ports:
#            - name: http-port
#              containerPort: 8081
#          volumeMounts:
#            - name: nexus-data
#              mountPath: /nexus-data
#            - name: gep-dev-generated-code
#              mountPath: /geppetto
#        - name: sonarqube-container
#          image: sonarqube:latest
#          args:
#            - -Dsonar.web.context=/sonar
#          env:
#            - name: SONARQUBE_JDBC_PASSWORD
#              value: T@ng3456
#            - name: SONARQUBE_JDBC_URL
#              value: jdbc:postgresql://{{ .Values.app.prefix }}-ops-db:5432/sonar
#          ports:
#            - containerPort: 9000
#              name: sonarqube
#          volumeMounts:
#            - name: {{ .Values.app.prefix }}-generated-code
#              mountPath: /geppetto
      volumes:
#        - name: jenkins-data
#          persistentVolumeClaim:
#            claimName: '{{ .Values.app.prefix }}-ops-pvc'
#        - name: nexus-data
#          emptyDir: {}
        - name: docker-socket-volume
          hostPath:
            path: /var/run/docker.sock
            type: File
        - name: {{ .Values.app.prefix }}-generated-code
          persistentVolumeClaim:
            claimName: '{{ .Values.app.prefix }}-generated-code-pvc'