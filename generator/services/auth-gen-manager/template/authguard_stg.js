/*
 * Template group authguard
 * Compiled on Thu Aug 29 2019 16:52:08 GMT+0530 (India Standard Time)
 */
var path = require("path");
var base = path.dirname(module.filename);

function getInstance(st, group) {
    "use strict";
var r;
var gFile = "authguard"; 

group.name = "authguard";





//
// Template /authguard
//
r = function(w, rc) {
    var g = this.owningGroup,
        s = this.scope;
    
    w.pushIndentation("    ");
    w.write("import { Injectable, Output, EventEmitter, Input } from '@angular/core';");
    w.popIndentation();
    w.write("\n");
    w.write("import {");
    w.write("\n");
    w.pushIndentation("  ");
    w.write("CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, GuardsCheckStart");
    w.popIndentation();
    w.write("\n");
    w.write("} from '@angular/router';");
    w.write("\n");
    w.write("import { Router } from '@angular/router';");
    w.write("\n");
    w.write("import { JwtHelperService } from '@auth0/angular-jwt';");
    w.write("\n");
    w.write("import { BroadcastService } from './broadcast.service';");
    w.write("\n");
    w.write("\n");
    w.write("import 'rxjs/add/operator/filter';");
    w.write("\n");
    w.write("@Injectable({");
    w.write("\n");
    w.pushIndentation("  ");
    w.write("providedIn: 'root'");
    w.popIndentation();
    w.write("\n");
    w.write("})");
    w.write("\n");
    w.write("export class AuthGuard implements CanActivate {");
    w.write("\n");
    w.write("\n");
    w.pushIndentation("  ");
    w.write("@Output() getPermission = new EventEmitter();");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("  ");
    w.write("public jwtToken: any;");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("  ");
    w.write("public accessRoutes: any;");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("  ");
    w.write("public userRole: any;");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("  ");
    w.write("public viewPermission: any;");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("  ");
    w.write("public routeName: any;");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("  ");
    w.write("public checkAdmin: any;");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("  ");
    w.write("public landingPageObject: any;");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("  ");
    w.write("public projectScreen: any;");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("  ");
    w.write("public userId: any;");
    w.popIndentation();
    w.write("\n");
    w.write("\n");
    w.pushIndentation("  ");
    w.write("constructor(");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("    ");
    w.write("private route: Router,");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("    ");
    w.write("public broadcastService: BroadcastService");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("  ");
    w.write(") {");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("    ");
    w.write("this.broadcastService.currentUserName.subscribe(authGuardValue => {");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("      ");
    w.write("// @ts-ignore");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("      ");
    w.write("this.accessRoutes = authGuardValue.Access;");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("    ");
    w.write("});");
    w.popIndentation();
    w.write("\n");
    w.write("\n");
    w.pushIndentation("    ");
    w.write("this.routeEvent(this.route);");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("  ");
    w.write("}");
    w.popIndentation();
    w.write("\n");
    w.write("\n");
    w.pushIndentation("  ");
    w.write("public routeEvent(router: Router) {");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("    ");
    w.write("router.events.subscribe(e => {");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("      ");
    w.write("if (e instanceof GuardsCheckStart) {");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("        ");
    w.write("this.routeName = e.url.replace(/\\?[a-z].*/g, '').replace(/\\/:[a-z].*/g, '').replace(/\\//g, '');");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("      ");
    w.write("}");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("    ");
    w.write("});");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("  ");
    w.write("}");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("  ");
    w.write("canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("    ");
    w.write("this.routeName = state.url.replace(/\\?[a-z].*/g, '').replace(/\\/:[a-z].*/g, '').replace(/\\//g, '');");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("    ");
    w.write("this.userId = sessionStorage.getItem('Id');");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("    ");
    w.write("if (this.userId !== null) {");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("      ");
    w.write("this.jwtToken = sessionStorage.getItem('JwtToken');");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("      ");
    w.write("const helper = new JwtHelperService();");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("      ");
    w.write("const decodedToken = helper.decodeToken(this.jwtToken);");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("      ");
    w.write("this.userRole = decodedToken.role;");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("      ");
    w.write("const url = window.location.href;");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("      ");
    w.write("this.accessRoutes = JSON.parse(sessionStorage.getItem('Access'));");
    w.popIndentation();
    w.write("\n");
    w.write("\n");
    w.pushIndentation("      ");
    w.write("if (this.accessRoutes) {");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("        ");
    w.write("this.accessRoutes.forEach(element => {");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("          ");
    w.write("const Developer = element['Developer'];");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("          ");
    w.write("const Admin = element['Admin'];");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("          ");
    w.write("const User = element['Standard User'];");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("          ");
    w.write("if (this.userRole === 'Admin') {");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("            ");
    w.write("const adminAccess = JSON.parse(Admin.value);");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("            ");
    w.write("const adminPage = adminAccess['Admin'];");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("            ");
    w.write("this.viewPermission = adminPage[0].Access.value;");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("            ");
    w.write("const Project = adminAccess['Project'];");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("            ");
    w.write("const Landing = adminAccess['Landing'];");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("            ");
    w.write("Project.forEach(projectAccess => {");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("              ");
    w.write("const projectPermission = projectAccess.Access.value;");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("              ");
    w.write("this.viewPermission = projectPermission;");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("              ");
    w.write("const projectField = projectAccess.Fields;");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("              ");
    w.write("const config = projectField[0].Configuration;");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("              ");
    w.write("const configValue = config.value;");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("              ");
    w.write("this.projectScreen = {");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("                ");
    w.write("'Access': projectPermission,");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("                ");
    w.write("'Fields': {");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("                  ");
    w.write("'config': configValue");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("                ");
    w.write("}");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("              ");
    w.write("};");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("            ");
    w.write("});");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("            ");
    w.write("Landing.forEach(landingAccess => {");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("              ");
    w.write("const landingPage = landingAccess.Access.value;");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("              ");
    w.write("if (landingPage === 'true') {");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("                ");
    w.write("const landingFields = landingAccess.Fields;");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("                ");
    w.write("this.landingPageObject = {");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("                  ");
    w.write("'Access': landingPage,");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("                  ");
    w.write("'Fields': landingFields");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("                ");
    w.write("};");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("              ");
    w.write("}");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("            ");
    w.write("});");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("            ");
    w.write("this.broadcastService.sendMessage({ 'Landing': this.landingPageObject, 'Project': this.projectScreen });");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("          ");
    w.write("}");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("          ");
    w.write("if (this.userRole === 'Developer') {");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("            ");
    w.write("const developerAccess = JSON.parse(Developer.value);");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("            ");
    w.write("this.checkAdmin = developerAccess.Admin.Access.value;");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("            ");
    w.write("if (this.checkAdmin === 'false') {");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("              ");
    w.write("const Project = developerAccess['Project'];");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("              ");
    w.write("const Landing = developerAccess['Landing'];");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("              ");
    w.write("Project.forEach(projectAccess => {");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("                ");
    w.write("const projectPermission = projectAccess.Access.value;");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("                ");
    w.write("this.viewPermission = projectPermission;");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("                ");
    w.write("const projectField = projectAccess.Fields;");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("                ");
    w.write("const config = projectField[0].Configuration;");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("                ");
    w.write("const configValue = config.value;");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("                ");
    w.write("this.projectScreen = {");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("                  ");
    w.write("'Access': projectPermission,");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("                  ");
    w.write("'Fields': {");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("                    ");
    w.write("'config': configValue");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("                  ");
    w.write("}");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("                ");
    w.write("};");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("              ");
    w.write("});");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("              ");
    w.write("Landing.forEach(landingAccess => {");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("                ");
    w.write("const landingPage = landingAccess.Access.value;");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("                ");
    w.write("if (landingPage === 'true') {");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("                  ");
    w.write("const landingFields = landingAccess.Fields;");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("                  ");
    w.write("this.landingPageObject = {");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("                    ");
    w.write("'Access': landingPage,");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("                    ");
    w.write("'Fields': landingFields");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("                  ");
    w.write("};");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("                ");
    w.write("}");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("              ");
    w.write("});");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("              ");
    w.write("this.broadcastService.sendMessage({ 'Landing': this.landingPageObject, 'Project': this.projectScreen });");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("            ");
    w.write("} else {");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("              ");
    w.write("this.getPermission.emit(developerAccess.Admin.Access.value);");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("              ");
    w.write("this.viewPermission = developerAccess.Admin.Access.value;");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("            ");
    w.write("}");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("          ");
    w.write("}");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("          ");
    w.write("if (this.userRole === 'Standarduser') {");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("            ");
    w.write("const userAccess = JSON.parse(User.value);");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("            ");
    w.write("this.projectScreen = {");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("              ");
    w.write("'Access': userAccess.Admin.Access.value");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("            ");
    w.write("};");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("            ");
    w.write("this.broadcastService.sendMessage({ 'Project': this.projectScreen });");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("            ");
    w.write("this.viewPermission = userAccess.Admin.Access.value;");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("          ");
    w.write("}");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("        ");
    w.write("});");
    w.popIndentation();
    w.write("\n");
    w.write("\t ");
    if (st.test(s.object)) {
    
        st.write(w, s, g, rc, (function() {
        var tp = [],
        attr = s.object;
        tp.push(st.makeSubTemplate(g, function(w, rc) {
            var g = this.owningGroup,
            s = this.scope;
            
                     w.write("if(this.routeName === '");
                     st.write(w, s, g, rc, s.value);
                     w.write("') {");
                     w.write("\n");
                     w.pushIndentation("         ");
                     w.write("return true;");
                     w.popIndentation();
                     w.write("\n");
                     w.pushIndentation("     ");
                     w.write("}");
                     w.popIndentation();
                     w.write("\n");
                     w.write("      ");
            }, [
            { name: "value"     }
            ])); 
        return st.map(attr, tp);
        })(), {separator: "\n"});
    
    
    }
    w.write("\n");
    w.pushIndentation("      ");
    w.write("\n");
    w.popIndentation();
    w.pushIndentation("        ");
    w.write("if (this.routeName === 'admin') {");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("          ");
    w.write("if (this.viewPermission !== 'true') {");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("            ");
    w.write("return false;");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("          ");
    w.write("} else {");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("            ");
    w.write("return true;");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("          ");
    w.write("}");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("        ");
    w.write("}");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("      ");
    w.write("}");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("    ");
    w.write("} else {");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("      ");
    w.write("this.route.navigate(['']);");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("      ");
    w.write("return false;");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("    ");
    w.write("}");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("  ");
    w.write("}");
    w.popIndentation();
    w.write("\n");
    w.write("}");
    w.write("\n");
    w.write("\n");
};
r.args = [
        { name: "object"     }
];
group.addTemplate("/authguard", r); 


return group;
}
getInstance.base = base;

module.exports = getInstance;