/*
 * Template group elasticsearch_statefulset_yaml
 * Compiled on Thu Feb 21 2019 13:16:53 GMT+0530 (India Standard Time)
 */
var path = require("path");
var base = path.dirname(module.filename);

function getInstance(st, group) {
    "use strict";
var r;
var gFile = "elasticsearch_statefulset_yaml"; 

group.name = "elasticsearch_statefulset_yaml";





//
// Template /elasticsearch_statefulset_yaml
//
r = function(w, rc) {
    var g = this.owningGroup,
        s = this.scope;
    
    w.write("apiVersion: apps/v1");
    w.write("\n");
    w.write("kind: StatefulSet");
    w.write("\n");
    w.write("metadata:");
    w.write("\n");
    w.pushIndentation("  ");
    w.write("name: es-cluster");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("  ");
    w.write("namespace: ");
    w.popIndentation();
    st.write(w, s, g, rc, s.project_name);
    w.write("-logging");
    w.write("\n");
    w.write("spec:");
    w.write("\n");
    w.pushIndentation("  ");
    w.write("serviceName: elasticsearch");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("  ");
    w.write("replicas: 1");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("  ");
    w.write("selector:");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("    ");
    w.write("matchLabels:");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("      ");
    w.write("app: elasticsearch");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("  ");
    w.write("template:");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("    ");
    w.write("metadata:");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("      ");
    w.write("labels:");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("        ");
    w.write("app: elasticsearch");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("    ");
    w.write("spec:");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("      ");
    w.write("containers:");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("      ");
    w.write("- name: elasticsearch");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("        ");
    w.write("image: docker.elastic.co/elasticsearch/elasticsearch-oss:6.4.3");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("        ");
    w.write("resources:");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("            ");
    w.write("limits:");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("              ");
    w.write("cpu: 1000m");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("            ");
    w.write("requests:");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("              ");
    w.write("cpu: 100m");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("        ");
    w.write("ports:");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("        ");
    w.write("- containerPort: 9200");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("          ");
    w.write("name: rest");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("          ");
    w.write("protocol: TCP");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("        ");
    w.write("- containerPort: 9300");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("          ");
    w.write("name: inter-node");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("          ");
    w.write("protocol: TCP");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("        ");
    w.write("volumeMounts:");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("        ");
    w.write("- name: data");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("          ");
    w.write("mountPath: /usr/share/elasticsearch/data");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("        ");
    w.write("env:");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("          ");
    w.write("- name: cluster.name");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("            ");
    w.write("value: k8s-logs");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("          ");
    w.write("- name: node.name");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("            ");
    w.write("valueFrom:");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("              ");
    w.write("fieldRef:");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("                ");
    w.write("fieldPath: metadata.name");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("          ");
    w.write("- name: discovery.zen.ping.unicast.hosts");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("            ");
    w.write("value: \"es-cluster-0.elasticsearch\"");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("          ");
    w.write("- name: discovery.zen.minimum_master_nodes");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("            ");
    w.write("value: \"1\"");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("          ");
    w.write("- name: ES_JAVA_OPTS");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("            ");
    w.write("value: \"-Xms512m -Xmx512m\"");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("      ");
    w.write("initContainers:");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("      ");
    w.write("- name: fix-permissions");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("        ");
    w.write("image: busybox");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("        ");
    w.write("command: [\"sh\", \"-c\", \"chown -R 1000:1000 /usr/share/elasticsearch/data\"]");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("        ");
    w.write("securityContext:");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("          ");
    w.write("privileged: true");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("        ");
    w.write("volumeMounts:");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("        ");
    w.write("- name: data");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("          ");
    w.write("mountPath: /usr/share/elasticsearch/data");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("      ");
    w.write("- name: increase-vm-max-map");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("        ");
    w.write("image: busybox");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("        ");
    w.write("command: [\"sysctl\", \"-w\", \"vm.max_map_count=262144\"]");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("        ");
    w.write("securityContext:");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("          ");
    w.write("privileged: true");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("      ");
    w.write("- name: increase-fd-ulimit");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("        ");
    w.write("image: busybox");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("        ");
    w.write("command: [\"sh\", \"-c\", \"ulimit -n 65536\"]");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("        ");
    w.write("securityContext:");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("          ");
    w.write("privileged: true");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("      ");
    w.write("volumes:");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("        ");
    w.write("- name: data");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("          ");
    w.write("persistentVolumeClaim:");
    w.popIndentation();
    w.write("\n");
    w.pushIndentation("            ");
    w.write("claimName: data");
    w.popIndentation();
};
r.args = [
        { name: "project_name"     }
];
group.addTemplate("/elasticsearch_statefulset_yaml", r); 


return group;
}
getInstance.base = base;

module.exports = getInstance;