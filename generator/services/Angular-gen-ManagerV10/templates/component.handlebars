import { Component, OnInit } from '@angular/core';
{{#each GpHeaders}}
import { {{importName}} } from '{{ importPath }}';
{{/each}}

@Component({
  selector: 'app-{{ GpOptions.screenName }}',
  templateUrl: './{{ GpOptions.screenName }}.component.html',
  styleUrls: ['./{{ GpOptions.screenName }}.component.scss'],
})

export class {{ GpOptions.className }} implements OnInit {
{{#each GpOptions.variables}}
    {{name}}: {{dataType}};
{{/each}}
{{#each GpOptions.entities}}
    public {{ name }} = {
    {{#each field}}
        {{ name }}: '',
    {{/each}}
    }
{{/each}}

    constructor (
        {{#each GpOptions.constructor}}
        private {{ objectName }}: {{ className }},
        {{/each}}
    ) { }

    ngOnInit() {
    {{#each GpCodeToAdd.lifecycle_info }}
        {{#if queryParams}}
        this.activatedRoute.queryParams.subscribe(params => { 
            this.queryId = params.id; 
            this.GpGetNounById();
        });
        {{/if}}
    {{/each}}
    }
{{#each GpCodeToAdd.flows_info }}
    {{ flowName }}() {
        this.{{ ../GpOptions.screenName }}Service.{{ flowName }}({{ parameterName }}).subscribe(data => {
        {{!-- GpCreate --}}
        {{#ifCond flowName '==' 'GpCreate'}}
        {{#each field}}
            {{../entityName}}.{{name}} = '';
        {{/each}}
        {{/ifCond}}
        {{!-- GpUpdate --}}
        {{#ifCond flowName '==' 'GpUpdate'}}
        {{#each field}}
            {{../entityName}}.{{name}} = '';
        {{/each}}
        {{/ifCond}}
        {{!-- GpGetNounById --}}
        {{#ifCond flowName '==' 'GpGetNounById'}}
            {{entityName}} = data;
        {{/ifCond}}
        },
        error => {
            console.log('Error', error);
        });
    }
{{/each}}
{{#each GpCodeToAdd.route_info }}
    {{ flowName }}(queryId) {
        {{objectName}}.navigate(['{{navigationUrl}}'], { queryParams: { 'id': queryId } });
    }
{{/each}}
}