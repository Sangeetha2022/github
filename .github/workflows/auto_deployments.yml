# This is a basic workflow to help you get started with Actions

name: auto_deployements for geppetto dev env

on:
  push:
    branches:
      - dev
env:
  aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID}}
  aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  aws-region: us-east-1      
########### Jobs ###########
jobs:
  validation:
    runs-on: ubuntu-latest 
    outputs:
        instance_data_value: ${{ steps.ec2.outputs.INSTANCE_STATE }} 
        run_UI_jobs: ${{ steps.UI-frontend.outputs.ui}}
        run_services_jobs: ${{ steps.services.outputs.service }}
    steps:
    - name: aws configuration
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ env.aws-access-key-id }}
        aws-secret-access-key: ${{ env. aws-secret-access-key}}
        aws-region: ${{env.aws-region}}
    - name: Instance State
      run: echo "::set-output name=INSTANCE_STATE::$(aws ec2 describe-instances --instance-ids i-082c02e8aa3853a62 | jq '.Reservations[].Instances[].State.Name')"
      id: ec2
    - name:  Status of Instance 
      run: |
          echo ${{ steps.ec2.outputs.INSTANCE_STATE }} 
    - uses: actions/checkout@v2
    - name: Check for changes
      id: diff
      run: |
        if [ $GITHUB_BASE_REF ]; then
          # Pull Request
          git fetch origin $GITHUB_BASE_REF --depth=1
          export DIFF=$( git diff --name-only origin/$GITHUB_BASE_REF $GITHUB_SHA )
          echo "Diff between origin/$GITHUB_BASE_REF and $GITHUB_SHA"
        else
          # Push
          git fetch origin ${{ github.event.before }} --depth=1
          export DIFF=$( git diff --name-only ${{ github.event.before }} $GITHUB_SHA )
          echo "Diff between ${{ github.event.before }} and $GITHUB_SHA"
        fi
        echo "$DIFF"
        # Escape newlines (replace \n with %0A)
        echo "::set-output name=diff::$( echo "$DIFF" | sed ':a;N;$!ba;s/\n/%0A/g' )"
    - name: UI to build function
      if: steps.ec2.outputs.INSTANCE_STATE == '"running"'
      id: UI-frontend
      run: |
        DIFF="${{ steps.diff.outputs.diff }}"
        while read path;
        do
          directory="$( echo $path )"
          if [[ $directory != application/client/desktop/* ]]; then
            echo "::set-output name=ui::notcommited" 
            continue
          else
            echo "::set-output name=ui::commited"
            break
          fi
        done <<< "$DIFF"
    - name: Services function to build
      if: steps.ec2.outputs.INSTANCE_STATE == '"running"'
      id: services
      run: |
        DIFF="${{ steps.diff.outputs.diff }}"
        while read path;
        do
          directory="$( echo $path )"
          if [[ $directory != application/services/* && $directory != generator/services/*  ]]; then
            echo "::set-output name=service::notcommited" 
            continue
          else
            echo "::set-output name=service::commited"
            break
          fi
        done <<< "$DIFF"
  login:
    needs: validation
    if: needs.validation.outputs.run_services_jobs == 'commited'
    runs-on: ubuntu-latest
    steps:
    - name: Update the apt-get & install the sshpass
      run: sudo apt-get update && sudo apt-get -y install openssh-client && sudo apt-get -y install sshpass 
    - name: Login into the dev instance by using SSH
      uses: JimCronqvist/action-ssh@master
      with:
        hosts: 'ubuntu@ec2-34-197-46-177.compute-1.amazonaws.com'
        privateKey: ${{ secrets.PRIVATE_KEY }}
        command: |
          cd geppettotest
          git pull git@github.com:dan-castillo/geppettotest.git
          cd devops/docker-compose
          docker-compose down  --rmi all
          echo "Backend Deploy"
          docker-compose up -d --build
          sleep 50
          curl -i -X POST -H "Content-Type: multipart/form-data" -F "data=@../../application/services/Camunda/Gep_authorize.dmn" -F "deployment-name=gep_authorize" -F "enable-duplicate-filtering=true" -F "deploy-changed-only=true" http://localhost:8080/engine-rest/deployment/create
          echo "uploading the seed file....."
          sleep 30
          docker exec codegenmanager sh -c "mkdir /geppetto/generated-code; mkdir /geppetto/template;"
          sleep 20
          docker cp ../../generator/services/seed codegenmanager:/geppetto/template/
          echo "seed file copied"
          echo "Process completed"     

  Upload_S3:
    runs-on: ubuntu-latest
    needs: validation
    if: needs.validation.outputs.run_UI_jobs == 'commited'
    steps:
    - name: Check the  branch
      uses: actions/checkout@v2
    - name: Installing the Node and its dependies
      uses: actions/setup-node@v1
      with:
        node-version: 10
    - name: Installing node modules
      working-directory: ./application/clients/desktop
      run: |
        npm install -g @angular/cli
        npm i node-sass@4.8.3
        npm i 
        ng build --configuration=devops
    - name: Uploaging dist files into the S3 bucket
      uses: jakejarvis/s3-sync-action@v0.5.1
      with:
        args: --acl public-read --delete
      env:
        AWS_S3_BUCKET: geppetto-dev
        AWS_ACCESS_KEY_ID: ${{ env.aws-access-key-id }}
        AWS_SECRET_ACCESS_KEY: ${{ env. aws-secret-access-key}}
        SOURCE_DIR: "application/clients/desktop/dist/GeppettoBuilder"